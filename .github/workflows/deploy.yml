name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  PNPM_VERSION: 8
  NODE_ENV: production

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - uses: pnpm/action-setup@v3
      name: Install pnpm
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install
      
    - name: Build
      run: |
        pnpm run build
        # 創建必要的文件
        touch out/.nojekyll
        cp public/CNAME out/
        # 如果沒有 404 頁面，創建一個基本的
        if [ ! -f out/404.html ]; then
          cp out/index.html out/404.html
        fi
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 